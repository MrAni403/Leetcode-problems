class Solution {
    private List<List<Integer>>result=new ArrayList<>();
    public void solve(int[] candidates,int target,int index,List<Integer>list){
        if(target==0){
            List<Integer> temp=new ArrayList<>();
            for(int j:list){
                temp.add(j);
            }
            result.add(temp);
            return;
        }
        if(index==candidates.length||target<candidates[index]){
            return;
        }
        int temp=candidates[index];
        list.add(candidates[index]);
        solve(candidates,target-candidates[index],index+1,list);
        list.remove(list.size()-1);
        int i=1;
        while(index+i<candidates.length&&candidates[index+i]==temp){
            i++;
        }
        solve(candidates,target,index+i,list);
        return;
    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        solve(candidates,target,0,new ArrayList<>());
        return result;
    }
}
